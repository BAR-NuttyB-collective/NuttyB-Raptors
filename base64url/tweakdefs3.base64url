LS1UNCBEZWZlbmNlcyBOdXR0eUIgQmFsYW5jZQ0KLS0gQXV0aG9yczogSGVkZ2Vob2d6cw0KLS0gZG9jcy5nb29nbGUuY29tL3NwcmVhZHNoZWV0cy9kLzFRU1ZzdUFBTWhCcmhpWmRUaWhWZlNDd1B6YmJaV0RMQ3RYV1AyM0NVMGtvDQpsb2NhbCBhLGIsYyxkLGU9VW5pdERlZnMgb3J7fSx0YWJsZS5tZXJnZSwnbGVnZW5kYXJ5X3B1bHNhcicsJ2xlZ2VuZGFyeV9idWx3YXJrJywnbGVnZW5kYXJ5X2Jhc3Rpb24nYS5sZWdlbmRhcnlfcHVsc2FyPWIoYVsnYXJtYW5uaXQzJ10se25hbWU9J0xlZ2VuZGFyeSBQdWxzYXInLGRlc2NyaXB0aW9uPSdBIHBpbm5hY2xlIG9mIEFybWFkYSBlbmdpbmVlcmluZyB0aGF0IGZpcmVzIGRldmFzdGF0aW5nLCByYXBpZC1maXJlIHRhY2h5b24gYm9sdHMuJyxidWlsZHRpbWU9MjgwMDAwLGhlYWx0aD03NTAwMCxtZXRhbGNvc3Q9MzIwMDAsZW5lcmd5Y29zdD04MDAwMDAsZGFtYWdlbW9kaWZpZXI9MC4xNSxlbmVyZ3lzdG9yYWdlPTYwMDAsaWRsZWF1dG9oZWFsPTEwLHJhZGFyZGlzdGFuY2U9MTgwMCxzaWdodGRpc3RhbmNlPTEyMDAsY3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nTGVnZW5kYXJ5IFB1bHNhcicsaTE4bl9lbl90b29sdGlwPSdGaXJlcyBkZXZhc3RhdGluZywgcmFwaWQtZmlyZSB0YWNoeW9uIGJvbHRzIGF0IGV4dHJlbWUgcmFuZ2UuJyx0ZWNobGV2ZWw9NH0sZmVhdHVyZWRlZnM9e2RlYWQ9e2RhbWFnZT0zNjAwLG1ldGFsPTExNjQwfSxoZWFwPXtkYW1hZ2U9MTgwMCxtZXRhbD00NjU2fX0sd2VhcG9uZGVmcz17dGFjaHlvbl9idXJzdF9jYW5ub249e25hbWU9J1RhY2h5b24gQnVyc3QgQ2Fubm9uJyx3ZWFwb250eXBlPSdMYXNlckNhbm5vbicscmdiY29sb3I9JzAuMiAwLjcgMS4wJyxidXJzdD0zLGJ1cnN0cmF0ZT0wLjE1LHJlbG9hZHRpbWU9MS44LGFjY3VyYWN5PTQwMCxhcmVhb2ZlZmZlY3Q9MTI4LHJhbmdlPTE4MDAsZW5lcmd5cGVyc2hvdD01MDAsdHVycmV0PXRydWUsc291bmRzdGFydD0nYW5uaWd1bjEnLHNvdW5kaGl0PSd4cGxvbHJnMycsaW1wdWxzZWZhY3Rvcj0wLHdlYXBvbnZlbG9jaXR5PTE1MDAsdGhpY2tuZXNzPTEwLGV4cGxvc2lvbmdlbmVyYXRvcj0nY3VzdG9tOnRhY2h5b25zaG90JyxkYW1hZ2U9e2RlZmF1bHQ9MzU1MH0sYWxsb3dOb25CbG9ja2luZ0FpbT10cnVlLGF2b2lkZmVhdHVyZT1mYWxzZSxhdm9pZGZyaWVuZGx5PWZhbHNlLGNvbGxpZGVmcmllbmRseT1mYWxzZX19LHdlYXBvbnM9e1sxXT17ZGVmPSd0YWNoeW9uX2J1cnN0X2Nhbm5vbicsb25seXRhcmdldGNhdGVnb3J5PSdTVVJGQUNFJ319fSlhLmxlZ2VuZGFyeV9iYXN0aW9uPWIoYVsnbGVnYmFzdGlvbiddLHtuYW1lPSdMZWdlbmRhcnkgQmFzdGlvbicsZGVzY3JpcHRpb249J1RoZSB1bHRpbWF0ZSBkZWZlbnNpdmUgZW1wbGFjZW1lbnQuIFByb2plY3RzIGEgZGV2YXN0YXRpbmcsIHB1bHNhdGluZyBoZWF0cmF5LicsaGVhbHRoPTc1MDAwLG1ldGFsY29zdD00ODAwMCxlbmVyZ3ljb3N0PTE0NTAwMDAsYnVpbGR0aW1lPTE4MDAwMCxvYmplY3RuYW1lPSdzY2F2cy9zY2F2YmVhY29uX3Q0LnMzbycsc2NyaXB0PSdzY2F2cy9zY2F2YmVhY29uLmNvYicsYnVpbGRwaWM9J3NjYXZlbmdlcnMvU0NBVkJFQUNPTi5ERFMnLGRhbWFnZW1vZGlmaWVyPTAuMjAsY3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nTGVnZW5kYXJ5IEJhc3Rpb24nLGkxOG5fZW5fdG9vbHRpcD0nUHJvamVjdHMgYSBkZXZhc3RhdGluZywgcHVsc2F0aW5nIHB1cnBsZSBoZWF0cmF5LicsbWF4cmFuZ2U9MTQwMCx0ZWNobGV2ZWw9NH0sd2VhcG9uZGVmcz17bGVnZW5kYXJ5X2Jhc3Rpb25fcmF5PXtuYW1lPSdMZWdlbmRhcnkgSGVhdCBSYXknLHRoaWNrbmVzcz0xNSxyZ2Jjb2xvcj0nMS4wIDAuMiAxLjAnLHJhbmdlPTE0MDAsZGFtYWdlPXtkZWZhdWx0PTI5OTUsdnRvbD0xNX0sd2VhcG9udHlwZT0nQmVhbUxhc2VyJyxyZWxvYWR0aW1lPTAuMyxzb3VuZHN0YXJ0PSdiYW50aGllMicsc291bmR0cmlnZ2VyPXRydWUsYXJlYW9mZWZmZWN0PTEyMCxhdm9pZGZlYXR1cmU9ZmFsc2UsYXZvaWRmcmllbmRseT10cnVlLGJlYW10aW1lPTAuMyxjYW1lcmFzaGFrZT0wLjEsY29yZXRoaWNrbmVzcz0wLjMsY3JhdGVyYXJlYW9mZWZmZWN0PTEyMCxjcmF0ZXJib29zdD0wLGNyYXRlcm11bHQ9MCxlZGdlZWZmZWN0aXZlbmVzcz0wLjQ1LGVuZXJneXBlcnNob3Q9NTAwLGV4cGxvc2lvbmdlbmVyYXRvcj0nY3VzdG9tOmxhc2VyaGl0LW1lZGl1bS1wdXJwbGUnLGZpcmVzdGFydGVyPTkwLGZpcmV0b2xlcmFuY2U9MzAwLGltcHVsc2VmYWN0b3I9MCxsYXNlcmZsYXJlc2l6ZT02LG5vc2VsZmRhbWFnZT10cnVlLHByZWRpY3Rib29zdD0wLjMscHJveGltaXR5cHJpb3JpdHk9MSxyZ2Jjb2xvcjI9JzAuOSAxLjAgMC41Jyxzb3VuZGhpdGRyeT0nJyxzb3VuZGhpdHdldD0nc2l6emxlJyx0dXJyZXQ9dHJ1ZSx3ZWFwb252ZWxvY2l0eT0xNTAwLGFsbG93Tm9uQmxvY2tpbmdBaW09dHJ1ZSxjb2xsaWRlZnJpZW5kbHk9ZmFsc2V9fSx3ZWFwb25zPXtbMV09e2JhZHRhcmdldGNhdGVnb3J5PSdWVE9MIEdST1VORFNDT1VUJyxkZWY9J2xlZ2VuZGFyeV9iYXN0aW9uX3JheScsb25seXRhcmdldGNhdGVnb3J5PSdTVVJGQUNFJ319fSlhW2RdPWIoYVsnY29yZG9vbXQzJ10se25hbWU9J0xlZ2VuZGFyeSBCdWx3YXJrJyxkZXNjcmlwdGlvbj0nQSBwaW5uYWNsZSBvZiBkZWZlbnNpdmUgdGVjaG5vbG9neSwgdGhlIExlZ2VuZGFyeSBCdWx3YXJrIGFubmloaWxhdGVzIGFsbCB3aG8gYXBwcm9hY2guJyxidWlsZHRpbWU9MjUwMDAwLGhlYWx0aD05NTAwMCxtZXRhbGNvc3Q9NDUwMDAsZW5lcmd5Y29zdD0xMjUwMDAwLGRhbWFnZW1vZGlmaWVyPTAuMTUsZW5lcmd5c3RvcmFnZT01MDAwLGlkbGVhdXRvaGVhbD0xNSxyYWRhcmRpc3RhbmNlPTE0MDAsc2lnaHRkaXN0YW5jZT0xMTAwLGN1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J0xlZ2VuZGFyeSBCdWx3YXJrJyxpMThuX2VuX3Rvb2x0aXA9J1RoZSB1bHRpbWF0ZSBkZWZlbnNpdmUgc3RydWN0dXJlLicscGFyYWx5emVtdWx0aXBsaWVyPTAuMix0ZWNobGV2ZWw9NH0sZmVhdHVyZWRlZnM9e2RlYWQ9e2RhbWFnZT0xMDgwMCxtZXRhbD05NjY2fSxoZWFwPXtkYW1hZ2U9NTQwMCxtZXRhbD0zODY0fX0sd2VhcG9uZGVmcz17bGVnZW5kYXJ5X292ZXJsb2FkX3NjYXR0ZXI9e25hbWU9J092ZXJsb2FkIFNjYXR0ZXIgQmVhbWVyJyx3ZWFwb250eXBlPSdCZWFtTGFzZXInLHJhbmdlPTE1MDAscmVsb2FkdGltZT0wLjEsc3ByYXlhbmdsZT0zMDAwLHByb2plY3RpbGVzPTEyLHJnYmNvbG9yPScwLjggMC4xIDEuMCcsYWNjdXJhY3k9NTAsYWxsb3dOb25CbG9ja2luZ0FpbT10cnVlLGFyZWFvZmVmZmVjdD0xMCxiZWFtZGVjYXk9MC4wNSxiZWFtdGltZT0wLjEsYmVhbXR0bD0xLGNvcmV0aGlja25lc3M9MC4yNSxidXJuYmxvdz10cnVlLGN5bGluZGVydGFyZ2V0aW5nPTEsZWRnZWVmZmVjdGl2ZW5lc3M9MC4xNSxleHBsb3Npb25nZW5lcmF0b3I9J2N1c3RvbTpsYXNlcmhpdC1tZWRpdW0tcHVycGxlJyxmaXJlc3RhcnRlcj0xMDAsaW1wdWxzZWZhY3Rvcj0wLjEyMyxpbnRlbnNpdHk9MC43LGxhc2VyZmxhcmVzaXplPTkuMzUsbm9zZWxmZGFtYWdlPXRydWUsc291bmRoaXR3ZXQ9J3NpenpsZScsc291bmRzdGFydD0nYmVhbWVyc2hvdDInLHRvbGVyYW5jZT01MDAwLHRoaWNrbmVzcz02LHR1cnJldD10cnVlLHdlYXBvbnZlbG9jaXR5PTEwMDAsZGFtYWdlPXtkZWZhdWx0PTUwMH0sYXZvaWRmZWF0dXJlPWZhbHNlLGF2b2lkZnJpZW5kbHk9ZmFsc2UsY29sbGlkZWZyaWVuZGx5PWZhbHNlfSxsZWdlbmRhcnlfaGVhdF9yYXk9e25hbWU9J0FybWFnZWRkb24gSGVhdCBSYXknLHdlYXBvbnR5cGU9J0JlYW1MYXNlcicscmFuZ2U9MTMwMCxyZWxvYWR0aW1lPTQuMCxhcmVhb2ZlZmZlY3Q9NzIsYXZvaWRmZWF0dXJlPWZhbHNlLGJlYW10aW1lPTAuNixjYW1lcmFTaGFrZT0zNTAsY29yZXRoaWNrbmVzcz0wLjQwLGNyYXRlcmFyZWFvZmVmZmVjdD03MixlbmVyZ3lwZXJzaG90PTEyMDAsZXhwbG9zaW9uZ2VuZXJhdG9yPSdjdXN0b206Z2VuZXJpY3NoZWxsZXhwbG9zaW9uLW1lZGl1bS1iZWFtJyxpbXB1bHNlZmFjdG9yPTAsbGFyZ2ViZWFtbGFzZXI9dHJ1ZSxsYXNlcmZsYXJlc2l6ZT04Ljgsbm9zZWxmZGFtYWdlPXRydWUscmdiY29sb3I9JzEgMC44IDAnLHJnYmNvbG9yMj0nMC44IDAgMCcsc2Nyb2xsc3BlZWQ9NSxzb3VuZGhpdGRyeT0nJyxzb3VuZGhpdHdldD0nc2l6emxlJyxzb3VuZHN0YXJ0PSdoZWF0cmF5MnhsJyxzb3VuZHRyaWdnZXI9MSx0aGlja25lc3M9Nyx0b2xlcmFuY2U9MTAwMDAsdHVycmV0PXRydWUsd2VhcG9udmVsb2NpdHk9MTgwMCxkYW1hZ2U9e2RlZmF1bHQ9MTAwMDAsY29tbWFuZGVycz0xMzUwfSxhbGxvd05vbkJsb2NraW5nQWltPXRydWUsYXZvaWRmcmllbmRseT1mYWxzZSxjb2xsaWRlZnJpZW5kbHk9ZmFsc2V9LGxlZ2VuZGFyeV9wb2ludF9kZWZlbnNlPXtuYW1lPSdQb2ludCBEZWZlbnNlIExhc2VyJyx3ZWFwb250eXBlPSdCZWFtTGFzZXInLHJhbmdlPTc1MCxyZWxvYWR0aW1lPTAuNSxhcmVhb2ZlZmZlY3Q9MTIsYXZvaWRmZWF0dXJlPWZhbHNlLGJlYW10aW1lPTAuMyxjb3JldGhpY2tuZXNzPTAuMzIsZW5lcmd5cGVyc2hvdD01MDAsZXhwbG9zaW9uZ2VuZXJhdG9yPSdjdXN0b206bGFzZXJoaXQtbGFyZ2UtYmx1ZScsZmlyZXN0YXJ0ZXI9OTAsaW1wYWN0b25seT0xLGltcHVsc2VmYWN0b3I9MCxsYXJnZWJlYW1sYXNlcj10cnVlLGxhc2VyZmxhcmVzaXplPTguOCxub3NlbGZkYW1hZ2U9dHJ1ZSxwcm94aW1pdHlwcmlvcml0eT0wLHJnYmNvbG9yPScwIDAgMScsc291bmRoaXRkcnk9Jycsc291bmRoaXR3ZXQ9J3NpenpsZScsc291bmRzdGFydD0nYW5uaWd1bjEnLHNvdW5kdHJpZ2dlcj0xLHRleHR1cmUzPSdsYXJnZWJlYW0nLHRoaWNrbmVzcz01LjUsdGlsZWxlbmd0aD0xNTAsdG9sZXJhbmNlPTEwMDAwLHR1cnJldD10cnVlLHdlYXBvbnZlbG9jaXR5PTE1MDAsZGFtYWdlPXtkZWZhdWx0PTUwMCxjb21tYW5kZXJzPTk5OX0sYWxsb3dOb25CbG9ja2luZ0FpbT10cnVlLGF2b2lkZnJpZW5kbHk9ZmFsc2UsY29sbGlkZWZyaWVuZGx5PWZhbHNlfX0sd2VhcG9ucz17WzFdPXtkZWY9J2xlZ2VuZGFyeV9vdmVybG9hZF9zY2F0dGVyJ30sWzJdPXtkZWY9J2xlZ2VuZGFyeV9oZWF0X3JheSd9LFszXT17ZGVmPSdsZWdlbmRhcnlfcG9pbnRfZGVmZW5zZSd9fX0pbG9jYWwgZj17J2FybWFjYScsJ2FybWFjaycsJ2FybWFjc3ViJywnYXJtYWN2JywnY29yYWNhJywnY29yYWNrJywnY29yYWNzdWInLCdjb3JhY3YnLCdsZWdhY2EnLCdsZWdhY2snLCdsZWdhY3YnLCdsZWdjb210MmNvbSd9Zm9yIGcsaCBpbiBwYWlyc3snYXJtJywnY29yJywnbGVnJ31kbyBmb3IgaT0zLDEwIGRvIHRhYmxlLmluc2VydChmLGguLidjb21sdmwnLi5pKWVuZDt0YWJsZS5pbnNlcnQoZixoLi4ndDNhaXJhaWRlJyllbmQ7Zm9yIGcsaiBpbiBwYWlycyhmKWRvIGlmIGFbal10aGVuIGxvY2FsIGg9c3RyaW5nLnN1YihqLDEsMyl0YWJsZS5pbnNlcnQoYVtqXS5idWlsZG9wdGlvbnMsaD09J2FybSdhbmQgYyBvciBoPT0nY29yJ2FuZCBkIG9yIGUpZW5kIGVuZA