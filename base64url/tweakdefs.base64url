LS1OdXR0eUIgdjEuNTIgRGVmIE1haW4KLS0gQXV0aG9yczogQ2hyaXNweU51dCwgQmFja0Jhc2gKbG9jYWwgYT1Vbml0RGVmcyBvcnt9bG9jYWwgZnVuY3Rpb24gYihjLGQpZm9yIGUsZiBpbiBwYWlycyhkKWRvIGlmIHR5cGUoZik9PSd0YWJsZSdhbmQgdHlwZShjW2VdKT09J3RhYmxlJ3RoZW4gYihjW2VdLGYpZWxzZSBjW2VdPWYgZW5kIGVuZCBlbmQ7ZnVuY3Rpb24gZGVlcENvcHkoZCxnKWc9ZyBvcnt9bG9jYWwgaD17fWdbZF09aDtmb3IgZSxmIGluIHBhaXJzKGQpZG8gaWYgdHlwZShmKT09J3RhYmxlJ3RoZW4gaFtlXT1nW2Zdb3IgZGVlcENvcHkoZixnKWVsc2UgaFtlXT1mIGVuZCBlbmQ7cmV0dXJuIGggZW5kO2Z1bmN0aW9uIGFkZFdlYXBvbihpLGosaylhW2ldPWFbaV1vcnt9YVtpXS53ZWFwb25zPWFbaV0ud2VhcG9ucyBvcnt9YVtpXS53ZWFwb25kZWZzPWFbaV0ud2VhcG9uZGVmcyBvcnt9YVtpXS5jdXN0b21wYXJhbXM9YVtpXS5jdXN0b21wYXJhbXMgb3J7fWxvY2FsIGw9J3JlcHVsc29yJ3RhYmxlLmluc2VydChhW2ldLndlYXBvbnMse2RlZj1sLG9ubHl0YXJnZXRjYXRlZ29yeT1rIG9yJyd9KWFbaV0ud2VhcG9uZGVmc1tsXT1qO2lmIGouc2hpZWxkIGFuZCBqLnNoaWVsZC5wb3dlcj4wIHRoZW4gai5yYW5nZT1qLnNoaWVsZC5yYWRpdXM7YVtpXS5jdXN0b21wYXJhbXM9YVtpXS5jdXN0b21wYXJhbXMgb3J7fWIoYVtpXS5jdXN0b21wYXJhbXMse29mZl9vbl9zdHVuPSd0cnVlJyxzaGllbGRfY29sb3JfbXVsdD0wLjgsc2hpZWxkX3Bvd2VyPWouc2hpZWxkLnBvd2VyLHNoaWVsZF9yYWRpdXM9ai5zaGllbGQucmFkaXVzfSllbmQgZW5kO2xvY2FsIG09e2F2b2lkZmVhdHVyZT1mYWxzZSxjcmF0ZXJhcmVhb2ZlZmZlY3Q9MCxjcmF0ZXJib29zdD0wLGNyYXRlcm11bHQ9MCxlZGdlZWZmZWN0aXZlbmVzcz0wLjE1LG5hbWU9J1BsYXNtYVJlcHVsc29yJyxyYW5nZT01MCxzb3VuZGhpdHdldD0nc2l6emxlJyx3ZWFwb250eXBlPSdTaGllbGQnLGRhbWFnZT17ZGVmYXVsdD0xMDB9LHNoaWVsZD17YWxwaGE9MC4xNSxhcm1vcnR5cGU9J3NoaWVsZHMnLGVuZXJneXVzZT0xLGZvcmNlPTIuNSxpbnRlcmNlcHR0eXBlPTEscG93ZXI9NTAwLHBvd2VycmVnZW49Myxwb3dlcnJlZ2VuZW5lcmd5PTUscmFkaXVzPTUwLHJlcHVsc2VyPXRydWUsc21hcnQ9dHJ1ZSxzdGFydGluZ3Bvd2VyPTEwMCx2aXNpYmxlcmVwdWxzZT10cnVlLGJhZGNvbG9yPXsxLDAuMiwwLjIsMC4yfSxnb29kY29sb3I9ezAuMiwxLDAuMiwwLjE3fX19bG9jYWwgbj17J2FybWNvbScsJ2FybWNvbWx2bDInLCdhcm1jb21sdmwzJywnY29yY29tJywnY29yY29tbHZsMicsJ2NvcmNvbWx2bDMnLCdsZWdjb20nLCdsZWdjb21sdmwzJywnbGVnY29tbHZsNCd9Zm9yIG8saSBpbiBpcGFpcnMobilkbyBsb2NhbCBwPWRlZXBDb3B5KG0pcC5zaGllbGQuYWxwaGE9MC4xNTtwLnNoaWVsZC5wb3dlcj01MDA7cC5zaGllbGQucmFkaXVzPTEwMDtwLnNoaWVsZC5wb3dlcnJlZ2VuPTM7cC5zaGllbGQucG93ZXJyZWdlbmVuZXJneT0zO2FkZFdlYXBvbihpLHApZW5kO2ZvciBxLHIgaW4gcGFpcnMoYSlkbyBpZiBzdHJpbmcuc3ViKHEsMSwyNCk9PSdyYXB0b3JfYWlyX2ZpZ2h0ZXJfYmFzaWMndGhlbiBpZiByLndlYXBvbmRlZnMgdGhlbiBmb3Igcyx0IGluIHBhaXJzKHIud2VhcG9uZGVmcylkbyB0Lm5hbWU9J1NwaWtlJ3QuYWNjdXJhY3k9MjAwO3QuY29sbGlkZWZyaWVuZGx5PTA7dC5jb2xsaWRlZmVhdHVyZT0wO3QuYXZvaWRmZWF0dXJlPTA7dC5hdm9pZGZyaWVuZGx5PTA7dC5hcmVhb2ZlZmZlY3Q9NjQ7dC5lZGdlZWZmZWN0aXZlbmVzcz0wLjM7dC5leHBsb3Npb25nZW5lcmF0b3I9J2N1c3RvbTpyYXB0b3JzcGlrZS1sYXJnZS1zcGFya3MtYnVybid0LmNhbWVyYVNoYWtlPXt9dC5kYW5jZT17fXQuaW50ZXJjZXB0ZWRieXNoaWVsZHR5cGU9MDt0Lm1vZGVsPSdSYXB0b3JzL3NwaWtlLnMzbyd0LnJlbG9hZHRpbWU9MS4xO3Quc291bmRzdGFydD0ndGFsb25hdHRhY2sndC5zdGFydHZlbG9jaXR5PTIwMDt0LnN1Ym1pc3NpbGU9MTt0LnNtb2tldHJhaWw9MDt0LnNtb2tlUGVyaW9kPXt9dC5zbW9rZXRpbWU9e310LnNtb2tlc2l6ZT17fXQuc21va2Vjb2xvcj17fXQuc291bmRoaXQ9e310LnRleHR1cmUxPXt9dC50ZXh0dXJlMj17fXQudG9sZXJhbmNlPXt9dC50cmFja3M9MDt0LnR1cm5yYXRlPTYwMDAwO3Qud2VhcG9uYWNjZWxlcmF0aW9uPTEwMDt0LndlYXBvbnRpbWVyPTE7dC53ZWFwb252ZWxvY2l0eT0xMDAwO3Qud2VhcG9udHlwZT17fXQud29iYmxlPXt9ZW5kIGVuZCBlbHNlaWYgcTptYXRjaCdeW2FjbF1bb3JlXVtyZ21dY29tJ3RoZW4gYVtxXS5mZWF0dXJlZGVmcy5kZWFkLnJlY2xhaW1hYmxlPWZhbHNlO2FbcV0uZmVhdHVyZWRlZnMuZGVhZC5kYW1hZ2U9NTc2MDAgZW5kIGVuZDtpZiBhIHRoZW4gaWYgYS5yYXB0b3JfYWlyX2thbWlrYXplX2Jhc2ljX3QyX3YxIHRoZW4gYS5yYXB0b3JfYWlyX2thbWlrYXplX2Jhc2ljX3QyX3YxLnNlbGZkZXN0cnVjdGFzPSdyYXB0b3JfZW1wZGVhdGhfYmlnJ2VuZDtpZiBhLnJhcHRvcl9sYW5kX3N3YXJtZXJfZW1wX3QyX3YxIHRoZW4gYS5yYXB0b3JfbGFuZF9zd2FybWVyX2VtcF90Ml92MS53ZWFwb25kZWZzLnJhcHRvcnBhcmFseXplcnNtYWxsLmRhbWFnZS5zaGllbGRzPTYwIGVuZDtpZiBhLnJhcHRvcl9sYW5kX3N3YXJtZXJfZW1wX3QyX3YxIHRoZW4gYS5yYXB0b3JfbGFuZF9zd2FybWVyX2VtcF90Ml92MS53ZWFwb25kZWZzLnJhcHRvcnBhcmFseXplcnNtYWxsLnBhcmFseXpldGltZT02IGVuZDtpZiBhLnJhcHRvcl9sYW5kX2Fzc2F1bHRfZW1wX3QyX3YxIHRoZW4gYS5yYXB0b3JfbGFuZF9hc3NhdWx0X2VtcF90Ml92MS53ZWFwb25kZWZzLnJhcHRvcnBhcmFseXplcmJpZy5kYW1hZ2Uuc2hpZWxkcz0xNDAgZW5kO2lmIGEucmFwdG9yX2xhbmRfYXNzYXVsdF9lbXBfdDJfdjEgdGhlbiBhLnJhcHRvcl9sYW5kX2Fzc2F1bHRfZW1wX3QyX3YxLndlYXBvbmRlZnMucmFwdG9ycGFyYWx5emVyYmlnLnBhcmFseXpldGltZT0xMCBlbmQ7aWYgYS5yYXB0b3JfYWxsdGVycmFpbl9hcnR5X2VtcF90Ml92MSB0aGVuIGEucmFwdG9yX2FsbHRlcnJhaW5fYXJ0eV9lbXBfdDJfdjEud2VhcG9uZGVmcy5nb29sYXVuY2hlci5wYXJhbHl6ZXRpbWU9NiBlbmQ7aWYgYS5yYXB0b3JfYWxsdGVycmFpbl9hcnR5X2VtcF90NF92MSB0aGVuIGEucmFwdG9yX2FsbHRlcnJhaW5fYXJ0eV9lbXBfdDRfdjEud2VhcG9uZGVmcy5nb29sYXVuY2hlci5wYXJhbHl6ZXRpbWU9MTAgZW5kO2lmIGEucmFwdG9yX2Fpcl9ib21iZXJfZW1wX3QyX3YxIHRoZW4gYS5yYXB0b3JfYWlyX2JvbWJlcl9lbXBfdDJfdjEuY3J1aXNlYWx0aXR1ZGU9YS5yYXB0b3JfYWlyX2JvbWJlcl9lbXBfdDJfdjEuY3J1aXNlYWx0aXR1ZGUrNDAwIGVuZDtpZiBhLnJhcHRvcl9haXJfYm9tYmVyX2VtcF90Ml92MSB0aGVuIGEucmFwdG9yX2Fpcl9ib21iZXJfZW1wX3QyX3YxLndlYXBvbmRlZnMud2VhcG9uLmRhbWFnZS5zaGllbGRzPTEwMDAgZW5kO2lmIGEucmFwdG9yX2Fpcl9ib21iZXJfZW1wX3QyX3YxIHRoZW4gYS5yYXB0b3JfYWlyX2JvbWJlcl9lbXBfdDJfdjEud2VhcG9uZGVmcy53ZWFwb24uZGFtYWdlLmRlZmF1bHQ9MjAwMCBlbmQ7aWYgYS5yYXB0b3JfYWlyX2JvbWJlcl9lbXBfdDJfdjEgdGhlbiBhLnJhcHRvcl9haXJfYm9tYmVyX2VtcF90Ml92MS53ZWFwb25kZWZzLndlYXBvbi5wYXJhbHl6ZXRpbWU9MTAgZW5kO2lmIGEucmFwdG9yX2FsbHRlcnJhaW5fc3dhcm1lcl9lbXBfdDJfdjEgdGhlbiBhLnJhcHRvcl9hbGx0ZXJyYWluX3N3YXJtZXJfZW1wX3QyX3YxLndlYXBvbmRlZnMucmFwdG9ycGFyYWx5emVyc21hbGwucGFyYWx5emV0aW1lPTYgZW5kO2lmIGEucmFwdG9yX2FsbHRlcnJhaW5fc3dhcm1lcl9lbXBfdDJfdjEgdGhlbiBhLnJhcHRvcl9hbGx0ZXJyYWluX3N3YXJtZXJfZW1wX3QyX3YxLndlYXBvbmRlZnMucmFwdG9ycGFyYWx5emVyc21hbGwuZGFtYWdlLnNoaWVsZHM9NjAgZW5kO2lmIGEucmFwdG9yX2FsbHRlcnJhaW5fYXNzYXVsdF9lbXBfdDJfdjEgdGhlbiBhLnJhcHRvcl9hbGx0ZXJyYWluX2Fzc2F1bHRfZW1wX3QyX3YxLndlYXBvbmRlZnMucmFwdG9ycGFyYWx5emVyYmlnLnBhcmFseXpldGltZT02IGVuZDtpZiBhLnJhcHRvcl9hbGx0ZXJyYWluX2Fzc2F1bHRfZW1wX3QyX3YxIHRoZW4gYS5yYXB0b3JfYWxsdGVycmFpbl9hc3NhdWx0X2VtcF90Ml92MS53ZWFwb25kZWZzLnJhcHRvcnBhcmFseXplcmJpZy5kYW1hZ2Uuc2hpZWxkcz0xNDAgZW5kO2lmIGEucmFwdG9yX21hdHJpYXJjaF9lbGVjdHJpYyB0aGVuIGEucmFwdG9yX21hdHJpYXJjaF9lbGVjdHJpYy53ZWFwb25kZWZzLmdvby5wYXJhbHl6ZXRpbWU9MTMgZW5kO2lmIGEucmFwdG9yX21hdHJpYXJjaF9lbGVjdHJpYyB0aGVuIGEucmFwdG9yX21hdHJpYXJjaF9lbGVjdHJpYy53ZWFwb25kZWZzLm1lbGVlLnBhcmFseXpldGltZT0xMyBlbmQ7aWYgYS5yYXB0b3JfbWF0cmlhcmNoX2VsZWN0cmljIHRoZW4gYS5yYXB0b3JfbWF0cmlhcmNoX2VsZWN0cmljLndlYXBvbmRlZnMuc3Bpa2VfZW1wX2Jsb2IucGFyYWx5emV0aW1lPTEzIGVuZCBlbmQ7bG9jYWwgdT17J3JhcHRvcl9hbnRpbnVrZScsJ3JhcHRvcl90dXJyZXRfYWNpZF90Ml92MScsJ3JhcHRvcl90dXJyZXRfYWNpZF90M192MScsJ3JhcHRvcl90dXJyZXRfYWNpZF90NF92MScsJ3JhcHRvcl90dXJyZXRfYW50aWFpcl90Ml92MScsJ3JhcHRvcl90dXJyZXRfYW50aWFpcl90M192MScsJ3JhcHRvcl90dXJyZXRfYW50aWFpcl90NF92MScsJ3JhcHRvcl90dXJyZXRfYW50aW51a2VfdDJfdjEnLCdyYXB0b3JfdHVycmV0X2FudGludWtlX3QzX3YxJywncmFwdG9yX3R1cnJldF9iYXNpY190Ml92MScsJ3JhcHRvcl90dXJyZXRfYmFzaWNfdDNfdjEnLCdyYXB0b3JfdHVycmV0X2Jhc2ljX3Q0X3YxJywncmFwdG9yX3R1cnJldF9idXJyb3dfdDJfdjEnLCdyYXB0b3JfdHVycmV0X2VtcF90Ml92MScsJ3JhcHRvcl90dXJyZXRfZW1wX3QzX3YxJywncmFwdG9yX3R1cnJldF9lbXBfdDRfdjEnLCdyYXB0b3Jfd29ybV9ncmVlbid9Zm9yIHYsdyBpbiBwYWlycyhhKWRvIGZvciBzLHggaW4gaXBhaXJzKHUpZG8gaWYgdj09eCB0aGVuIHcubWF4dGhpc3VuaXQ9MTA7dy5oZWFsdGg9dy5oZWFsdGgqMjtpZiB3LndlYXBvbmRlZnMgdGhlbiBmb3Igcyx0IGluIHBhaXJzKHcud2VhcG9uZGVmcylkbyB0LnJlbG9hZHRpbWU9dC5yZWxvYWR0aW1lLzEuNTt0LnJhbmdlPXQucmFuZ2UvMiBlbmQgZW5kO2JyZWFrIGVuZCBlbmQgZW5kO2ZvciB5LHogaW4gcGFpcnMoYSlkbyBpZiB6LmJ1aWxkZXI9PXRydWUgdGhlbiBpZiB6LmNhbmZseT09dHJ1ZSB0aGVuIHouZXhwbG9kZWFzPScnei5zZWxmZGVzdHJ1Y3Rhcz0nJ2VuZCBlbmQgZW5kO2xvY2FsIHU9eydyYXB0b3JfYWlyX2JvbWJlcl9iYXNpY190Ml92MScsJ3JhcHRvcl9haXJfYm9tYmVyX2Jhc2ljX3QyX3YyJywncmFwdG9yX2Fpcl9ib21iZXJfYmFzaWNfdDRfdjEnLCdyYXB0b3JfYWlyX2JvbWJlcl9iYXNpY190NF92MicsJ3JhcHRvcl9haXJfYm9tYmVyX2Jhc2ljX3QxX3YxJ31mb3Igdix3IGluIHBhaXJzKGEpZG8gZm9yIHMseCBpbiBpcGFpcnModSlkbyBpZiB2PT14IHRoZW4gaWYgdy53ZWFwb25kZWZzIHRoZW4gZm9yIHMsdCBpbiBwYWlycyh3LndlYXBvbmRlZnMpZG8gdC5kYW1hZ2UuZGVmYXVsdD10LmRhbWFnZS5kZWZhdWx0LzEuMzMgZW5kIGVuZDticmVhayBlbmQgZW5kIGVuZDtmb3IgQSx5IGluIHBhaXJzKHsnYXJtcmVzcGF3bicsJ2NvcnJlc3Bhd24nLCdsZWduYW5vdGNiYXNlJ30pZG8gYVt5XS5jYW50YmV0cmFuc3BvcnRlZD1mYWxzZTthW3ldLmZvb3RwcmludHg9NDthW3ldLmZvb3RwcmludHo9NDthW3ldLmN1c3RvbXBhcmFtcy5wYXJhdHJvb3Blcj10cnVlO2FbeV0uY3VzdG9tcGFyYW1zLmZhbGxfZGFtYWdlX211bHRpcGxpZXI9MCBlbmQ