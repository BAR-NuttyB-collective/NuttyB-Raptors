LS1OdXR0eUIgdjEuNTIgRGVmIE1haW4KLS0gQXV0aG9yczogQ2hyaXNweU51dCwgQmFja0Jhc2gKLS0gZG9jcy5nb29nbGUuY29tL3NwcmVhZHNoZWV0cy9kLzFRU1ZzdUFBTWhCcmhpWmRUaWhWZlNDd1B6YmJaV0RMQ3RYV1AyM0NVMGtvCmxvY2FsIGE9VW5pdERlZnMgb3J7fWxvY2FsIGZ1bmN0aW9uIGIoYyxkKWZvciBlLGYgaW4gcGFpcnMoZClkbyBpZiB0eXBlKGYpPT0ndGFibGUnYW5kIHR5cGUoY1tlXSk9PSd0YWJsZSd0aGVuIGIoY1tlXSxmKWVsc2UgY1tlXT1mIGVuZCBlbmQgZW5kO2Z1bmN0aW9uIGRlZXBDb3B5KGQsZylnPWcgb3J7fWxvY2FsIGg9e31nW2RdPWg7Zm9yIGUsZiBpbiBwYWlycyhkKWRvIGlmIHR5cGUoZik9PSd0YWJsZSd0aGVuIGhbZV09Z1tmXW9yIGRlZXBDb3B5KGYsZyllbHNlIGhbZV09ZiBlbmQgZW5kO3JldHVybiBoIGVuZDtmdW5jdGlvbiBhZGRXZWFwb24oaSxqLGspYVtpXT1hW2ldb3J7fWFbaV0ud2VhcG9ucz1hW2ldLndlYXBvbnMgb3J7fWFbaV0ud2VhcG9uZGVmcz1hW2ldLndlYXBvbmRlZnMgb3J7fWFbaV0uY3VzdG9tcGFyYW1zPWFbaV0uY3VzdG9tcGFyYW1zIG9ye31sb2NhbCBsPSdyZXB1bHNvcid0YWJsZS5pbnNlcnQoYVtpXS53ZWFwb25zLHtkZWY9bCxvbmx5dGFyZ2V0Y2F0ZWdvcnk9ayBvcicnfSlhW2ldLndlYXBvbmRlZnNbbF09ajtpZiBqLnNoaWVsZCBhbmQgai5zaGllbGQucG93ZXI-MCB0aGVuIGoucmFuZ2U9ai5zaGllbGQucmFkaXVzO2FbaV0uY3VzdG9tcGFyYW1zPWFbaV0uY3VzdG9tcGFyYW1zIG9ye31iKGFbaV0uY3VzdG9tcGFyYW1zLHtvZmZfb25fc3R1bj0ndHJ1ZScsc2hpZWxkX2NvbG9yX211bHQ9MC44LHNoaWVsZF9wb3dlcj1qLnNoaWVsZC5wb3dlcixzaGllbGRfcmFkaXVzPWouc2hpZWxkLnJhZGl1c30pZW5kIGVuZDtsb2NhbCBtPXthdm9pZGZlYXR1cmU9ZmFsc2UsY3JhdGVyYXJlYW9mZWZmZWN0PTAsY3JhdGVyYm9vc3Q9MCxjcmF0ZXJtdWx0PTAsZWRnZWVmZmVjdGl2ZW5lc3M9MC4xNSxuYW1lPSdQbGFzbWFSZXB1bHNvcicscmFuZ2U9NTAsc291bmRoaXR3ZXQ9J3NpenpsZScsd2VhcG9udHlwZT0nU2hpZWxkJyxkYW1hZ2U9e2RlZmF1bHQ9MTAwfSxzaGllbGQ9e2FscGhhPTAuMTUsYXJtb3J0eXBlPSdzaGllbGRzJyxlbmVyZ3l1c2U9MSxmb3JjZT0yLjUsaW50ZXJjZXB0dHlwZT0xLHBvd2VyPTUwMCxwb3dlcnJlZ2VuPTMscG93ZXJyZWdlbmVuZXJneT01LHJhZGl1cz01MCxyZXB1bHNlcj10cnVlLHNtYXJ0PXRydWUsc3RhcnRpbmdwb3dlcj0xMDAsdmlzaWJsZXJlcHVsc2U9dHJ1ZSxiYWRjb2xvcj17MSwwLjIsMC4yLDAuMn0sZ29vZGNvbG9yPXswLjIsMSwwLjIsMC4xN319fWxvY2FsIG49eydhcm1jb20nLCdhcm1jb21sdmwyJywnYXJtY29tbHZsMycsJ2FybWNvbWx2bDQnLCdjb3Jjb20nLCdjb3Jjb21sdmwyJywnY29yY29tbHZsMycsJ2NvcmNvbWx2bDQnLCdsZWdjb20nLCdsZWdjb21sdmwyJywnbGVnY29tbHZsMycsJ2xlZ2NvbWx2bDQnLCdsZWdjb210MmNvbSd9Zm9yIG8saSBpbiBpcGFpcnMobilkbyBsb2NhbCBwPWRlZXBDb3B5KG0pcC5zaGllbGQuYWxwaGE9MC4xNTtwLnNoaWVsZC5wb3dlcj01MDA7cC5zaGllbGQucmFkaXVzPTEwMDtwLnNoaWVsZC5wb3dlcnJlZ2VuPTM7cC5zaGllbGQucG93ZXJyZWdlbmVuZXJneT0zO2FkZFdlYXBvbihpLHApZW5kO2ZvciBxLHIgaW4gcGFpcnMoYSlkbyBpZiBzdHJpbmcuc3ViKHEsMSwyNCk9PSdyYXB0b3JfYWlyX2ZpZ2h0ZXJfYmFzaWMndGhlbiBpZiByLndlYXBvbmRlZnMgdGhlbiBmb3Igcyx0IGluIHBhaXJzKHIud2VhcG9uZGVmcylkbyB0Lm5hbWU9J1NwaWtlJ3QuYWNjdXJhY3k9MjAwO3QuY29sbGlkZWZyaWVuZGx5PTA7dC5jb2xsaWRlZmVhdHVyZT0wO3QuYXZvaWRmZWF0dXJlPTA7dC5hdm9pZGZyaWVuZGx5PTA7dC5hcmVhb2ZlZmZlY3Q9NjQ7dC5lZGdlZWZmZWN0aXZlbmVzcz0wLjM7dC5leHBsb3Npb25nZW5lcmF0b3I9J2N1c3RvbTpyYXB0b3JzcGlrZS1sYXJnZS1zcGFya3MtYnVybid0LmNhbWVyYVNoYWtlPXt9dC5kYW5jZT17fXQuaW50ZXJjZXB0ZWRieXNoaWVsZHR5cGU9MDt0Lm1vZGVsPSdSYXB0b3JzL3NwaWtlLnMzbyd0LnJlbG9hZHRpbWU9MS4xO3Quc291bmRzdGFydD0ndGFsb25hdHRhY2sndC5zdGFydHZlbG9jaXR5PTIwMDt0LnN1Ym1pc3NpbGU9MTt0LnNtb2tldHJhaWw9MDt0LnNtb2tlUGVyaW9kPXt9dC5zbW9rZXRpbWU9e310LnNtb2tlc2l6ZT17fXQuc21va2Vjb2xvcj17fXQuc291bmRoaXQ9e310LnRleHR1cmUxPXt9dC50ZXh0dXJlMj17fXQudG9sZXJhbmNlPXt9dC50cmFja3M9MDt0LnR1cm5yYXRlPTYwMDAwO3Qud2VhcG9uYWNjZWxlcmF0aW9uPTEwMDt0LndlYXBvbnRpbWVyPTE7dC53ZWFwb252ZWxvY2l0eT0xMDAwO3Qud2VhcG9udHlwZT17fXQud29iYmxlPXt9ZW5kIGVuZCBlbHNlaWYgcTptYXRjaCdeW2FjbF1bb3JlXVtyZ21dY29tJ3RoZW4gYVtxXS5mZWF0dXJlZGVmcy5kZWFkLnJlY2xhaW1hYmxlPWZhbHNlO2FbcV0uZmVhdHVyZWRlZnMuZGVhZC5kYW1hZ2U9OTk5OTkgZW5kIGVuZDtpZiBhIHRoZW4gaWYgYS5yYXB0b3JfYWlyX2thbWlrYXplX2Jhc2ljX3QyX3YxIHRoZW4gYS5yYXB0b3JfYWlyX2thbWlrYXplX2Jhc2ljX3QyX3YxLnNlbGZkZXN0cnVjdGFzPSdyYXB0b3JfZW1wZGVhdGhfYmlnJ2VuZDtpZiBhLnJhcHRvcl9sYW5kX3N3YXJtZXJfZW1wX3QyX3YxIHRoZW4gYS5yYXB0b3JfbGFuZF9zd2FybWVyX2VtcF90Ml92MS53ZWFwb25kZWZzLnJhcHRvcnBhcmFseXplcnNtYWxsLmRhbWFnZS5zaGllbGRzPTYwIGVuZDtpZiBhLnJhcHRvcl9sYW5kX3N3YXJtZXJfZW1wX3QyX3YxIHRoZW4gYS5yYXB0b3JfbGFuZF9zd2FybWVyX2VtcF90Ml92MS53ZWFwb25kZWZzLnJhcHRvcnBhcmFseXplcnNtYWxsLnBhcmFseXpldGltZT02IGVuZDtpZiBhLnJhcHRvcl9sYW5kX2Fzc2F1bHRfZW1wX3QyX3YxIHRoZW4gYS5yYXB0b3JfbGFuZF9hc3NhdWx0X2VtcF90Ml92MS53ZWFwb25kZWZzLnJhcHRvcnBhcmFseXplcmJpZy5kYW1hZ2Uuc2hpZWxkcz0xNDAgZW5kO2lmIGEucmFwdG9yX2xhbmRfYXNzYXVsdF9lbXBfdDJfdjEgdGhlbiBhLnJhcHRvcl9sYW5kX2Fzc2F1bHRfZW1wX3QyX3YxLndlYXBvbmRlZnMucmFwdG9ycGFyYWx5emVyYmlnLnBhcmFseXpldGltZT0xMCBlbmQ7aWYgYS5yYXB0b3JfYWxsdGVycmFpbl9hcnR5X2VtcF90Ml92MSB0aGVuIGEucmFwdG9yX2FsbHRlcnJhaW5fYXJ0eV9lbXBfdDJfdjEud2VhcG9uZGVmcy5nb29sYXVuY2hlci5wYXJhbHl6ZXRpbWU9NiBlbmQ7aWYgYS5yYXB0b3JfYWxsdGVycmFpbl9hcnR5X2VtcF90NF92MSB0aGVuIGEucmFwdG9yX2FsbHRlcnJhaW5fYXJ0eV9lbXBfdDRfdjEud2VhcG9uZGVmcy5nb29sYXVuY2hlci5wYXJhbHl6ZXRpbWU9MTAgZW5kO2lmIGEucmFwdG9yX2Fpcl9ib21iZXJfZW1wX3QyX3YxIHRoZW4gYS5yYXB0b3JfYWlyX2JvbWJlcl9lbXBfdDJfdjEud2VhcG9uZGVmcy53ZWFwb24uZGFtYWdlLnNoaWVsZHM9MTAwMCBlbmQ7aWYgYS5yYXB0b3JfYWlyX2JvbWJlcl9lbXBfdDJfdjEgdGhlbiBhLnJhcHRvcl9haXJfYm9tYmVyX2VtcF90Ml92MS53ZWFwb25kZWZzLndlYXBvbi5kYW1hZ2UuZGVmYXVsdD0yMDAwIGVuZDtpZiBhLnJhcHRvcl9haXJfYm9tYmVyX2VtcF90Ml92MSB0aGVuIGEucmFwdG9yX2Fpcl9ib21iZXJfZW1wX3QyX3YxLndlYXBvbmRlZnMud2VhcG9uLnBhcmFseXpldGltZT0xMCBlbmQ7aWYgYS5yYXB0b3JfYWxsdGVycmFpbl9zd2FybWVyX2VtcF90Ml92MSB0aGVuIGEucmFwdG9yX2FsbHRlcnJhaW5fc3dhcm1lcl9lbXBfdDJfdjEud2VhcG9uZGVmcy5yYXB0b3JwYXJhbHl6ZXJzbWFsbC5wYXJhbHl6ZXRpbWU9NiBlbmQ7aWYgYS5yYXB0b3JfYWxsdGVycmFpbl9zd2FybWVyX2VtcF90Ml92MSB0aGVuIGEucmFwdG9yX2FsbHRlcnJhaW5fc3dhcm1lcl9lbXBfdDJfdjEud2VhcG9uZGVmcy5yYXB0b3JwYXJhbHl6ZXJzbWFsbC5kYW1hZ2Uuc2hpZWxkcz02MCBlbmQ7aWYgYS5yYXB0b3JfYWxsdGVycmFpbl9hc3NhdWx0X2VtcF90Ml92MSB0aGVuIGEucmFwdG9yX2FsbHRlcnJhaW5fYXNzYXVsdF9lbXBfdDJfdjEud2VhcG9uZGVmcy5yYXB0b3JwYXJhbHl6ZXJiaWcucGFyYWx5emV0aW1lPTYgZW5kO2lmIGEucmFwdG9yX2FsbHRlcnJhaW5fYXNzYXVsdF9lbXBfdDJfdjEgdGhlbiBhLnJhcHRvcl9hbGx0ZXJyYWluX2Fzc2F1bHRfZW1wX3QyX3YxLndlYXBvbmRlZnMucmFwdG9ycGFyYWx5emVyYmlnLmRhbWFnZS5zaGllbGRzPTE0MCBlbmQ7aWYgYS5yYXB0b3JfbWF0cmlhcmNoX2VsZWN0cmljIHRoZW4gYS5yYXB0b3JfbWF0cmlhcmNoX2VsZWN0cmljLndlYXBvbmRlZnMuZ29vLnBhcmFseXpldGltZT0xMyBlbmQ7aWYgYS5yYXB0b3JfbWF0cmlhcmNoX2VsZWN0cmljIHRoZW4gYS5yYXB0b3JfbWF0cmlhcmNoX2VsZWN0cmljLndlYXBvbmRlZnMubWVsZWUucGFyYWx5emV0aW1lPTEzIGVuZDtpZiBhLnJhcHRvcl9tYXRyaWFyY2hfZWxlY3RyaWMgdGhlbiBhLnJhcHRvcl9tYXRyaWFyY2hfZWxlY3RyaWMud2VhcG9uZGVmcy5zcGlrZV9lbXBfYmxvYi5wYXJhbHl6ZXRpbWU9MTMgZW5kIGVuZDtsb2NhbCB1PXsncmFwdG9yX2FudGludWtlJywncmFwdG9yX3R1cnJldF9hY2lkX3QyX3YxJywncmFwdG9yX3R1cnJldF9hY2lkX3QzX3YxJywncmFwdG9yX3R1cnJldF9hY2lkX3Q0X3YxJywncmFwdG9yX3R1cnJldF9hbnRpYWlyX3QyX3YxJywncmFwdG9yX3R1cnJldF9hbnRpYWlyX3QzX3YxJywncmFwdG9yX3R1cnJldF9hbnRpYWlyX3Q0X3YxJywncmFwdG9yX3R1cnJldF9hbnRpbnVrZV90Ml92MScsJ3JhcHRvcl90dXJyZXRfYW50aW51a2VfdDNfdjEnLCdyYXB0b3JfdHVycmV0X2Jhc2ljX3QyX3YxJywncmFwdG9yX3R1cnJldF9iYXNpY190M192MScsJ3JhcHRvcl90dXJyZXRfYmFzaWNfdDRfdjEnLCdyYXB0b3JfdHVycmV0X2J1cnJvd190Ml92MScsJ3JhcHRvcl90dXJyZXRfZW1wX3QyX3YxJywncmFwdG9yX3R1cnJldF9lbXBfdDNfdjEnLCdyYXB0b3JfdHVycmV0X2VtcF90NF92MScsJ3JhcHRvcl93b3JtX2dyZWVuJ31mb3Igdix3IGluIHBhaXJzKGEpZG8gZm9yIHMseCBpbiBpcGFpcnModSlkbyBpZiB2PT14IHRoZW4gdy5tYXh0aGlzdW5pdD0xMDt3LmhlYWx0aD13LmhlYWx0aCoyO2lmIHcud2VhcG9uZGVmcyB0aGVuIGZvciBzLHQgaW4gcGFpcnMody53ZWFwb25kZWZzKWRvIHQucmVsb2FkdGltZT10LnJlbG9hZHRpbWUvMS41O3QucmFuZ2U9dC5yYW5nZS8yIGVuZCBlbmQ7YnJlYWsgZW5kIGVuZCBlbmQ7Zm9yIHkseiBpbiBwYWlycyhhKWRvIGlmIHouYnVpbGRlcj09dHJ1ZSB0aGVuIGlmIHouY2FuZmx5PT10cnVlIHRoZW4gei5leHBsb2RlYXM9Jyd6LnNlbGZkZXN0cnVjdGFzPScnZW5kIGVuZCBlbmQ7bG9jYWwgdT17J3JhcHRvcl9haXJfYm9tYmVyX2Jhc2ljX3QyX3YxJywncmFwdG9yX2Fpcl9ib21iZXJfYmFzaWNfdDJfdjInLCdyYXB0b3JfYWlyX2JvbWJlcl9iYXNpY190NF92MScsJ3JhcHRvcl9haXJfYm9tYmVyX2Jhc2ljX3Q0X3YyJywncmFwdG9yX2Fpcl9ib21iZXJfYmFzaWNfdDFfdjEnfWZvciB2LHcgaW4gcGFpcnMoYSlkbyBmb3Igcyx4IGluIGlwYWlycyh1KWRvIGlmIHY9PXggdGhlbiBpZiB3LndlYXBvbmRlZnMgdGhlbiBmb3Igcyx0IGluIHBhaXJzKHcud2VhcG9uZGVmcylkbyB0LmRhbWFnZS5kZWZhdWx0PXQuZGFtYWdlLmRlZmF1bHQvMS4zMyBlbmQgZW5kO2JyZWFrIGVuZCBlbmQgZW5kO2ZvciBBLHkgaW4gcGFpcnMoeydhcm1yZXNwYXduJywnY29ycmVzcGF3bicsJ2xlZ25hbm90Y2Jhc2UnfSlkbyBhW3ldLmNhbnRiZXRyYW5zcG9ydGVkPWZhbHNlO2FbeV0uZm9vdHByaW50eD00O2FbeV0uZm9vdHByaW50ej00O2FbeV0uY3VzdG9tcGFyYW1zLnBhcmF0cm9vcGVyPXRydWU7YVt5XS5jdXN0b21wYXJhbXMuZmFsbF9kYW1hZ2VfbXVsdGlwbGllcj0wIGVuZA