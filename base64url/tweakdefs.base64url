LS0gTnV0dHlCIHYxLjUyIERlZnMgTWFpbgpsb2NhbCBVbml0RGVmcz1Vbml0RGVmcyBvcnt9bG9jYWwgZnVuY3Rpb24gYShiLGMpZm9yIGQsZSBpbiBwYWlycyhjKWRvIGlmIHR5cGUoZSk9PSd0YWJsZSdhbmQgdHlwZShiW2RdKT09J3RhYmxlJ3RoZW4gYShiW2RdLGUpZWxzZSBiW2RdPWUgZW5kIGVuZCBlbmQ7ZnVuY3Rpb24gZGVlcENvcHkoYyxmKWY9ZiBvcnt9bG9jYWwgZz17fWZbY109Zztmb3IgZCxlIGluIHBhaXJzKGMpZG8gaWYgdHlwZShlKT09J3RhYmxlJ3RoZW4gZ1tkXT1mW2Vdb3IgZGVlcENvcHkoZSxmKWVsc2UgZ1tkXT1lIGVuZCBlbmQ7cmV0dXJuIGcgZW5kO2Z1bmN0aW9uIGFkZFdlYXBvbihoLGksailVbml0RGVmc1toXT1Vbml0RGVmc1toXW9ye31Vbml0RGVmc1toXS53ZWFwb25zPVVuaXREZWZzW2hdLndlYXBvbnMgb3J7fVVuaXREZWZzW2hdLndlYXBvbmRlZnM9VW5pdERlZnNbaF0ud2VhcG9uZGVmcyBvcnt9VW5pdERlZnNbaF0uY3VzdG9tcGFyYW1zPVVuaXREZWZzW2hdLmN1c3RvbXBhcmFtcyBvcnt9bG9jYWwgaz0ncmVwdWxzb3IndGFibGUuaW5zZXJ0KFVuaXREZWZzW2hdLndlYXBvbnMse2RlZj1rLG9ubHl0YXJnZXRjYXRlZ29yeT1qIG9yJyd9KVVuaXREZWZzW2hdLndlYXBvbmRlZnNba109aTtpZiBpLnNoaWVsZCBhbmQgaS5zaGllbGQucG93ZXI-MCB0aGVuIGkucmFuZ2U9aS5zaGllbGQucmFkaXVzO1VuaXREZWZzW2hdLmN1c3RvbXBhcmFtcz1Vbml0RGVmc1toXS5jdXN0b21wYXJhbXMgb3J7fWEoVW5pdERlZnNbaF0uY3VzdG9tcGFyYW1zLHtvZmZfb25fc3R1bj0ndHJ1ZScsc2hpZWxkX2NvbG9yX211bHQ9MC44LHNoaWVsZF9wb3dlcj1pLnNoaWVsZC5wb3dlcixzaGllbGRfcmFkaXVzPWkuc2hpZWxkLnJhZGl1c30pZW5kIGVuZDtsb2NhbCBsPXthdm9pZGZlYXR1cmU9ZmFsc2UsY3JhdGVyYXJlYW9mZWZmZWN0PTAsY3JhdGVyYm9vc3Q9MCxjcmF0ZXJtdWx0PTAsZWRnZWVmZmVjdGl2ZW5lc3M9MC4xNSxuYW1lPSdQbGFzbWFSZXB1bHNvcicscmFuZ2U9NTAsc291bmRoaXR3ZXQ9J3NpenpsZScsd2VhcG9udHlwZT0nU2hpZWxkJyxkYW1hZ2U9e2RlZmF1bHQ9MTAwfSxzaGllbGQ9e2FscGhhPTAuMTUsYXJtb3J0eXBlPSdzaGllbGRzJyxlbmVyZ3l1c2U9MSxmb3JjZT0yLjUsaW50ZXJjZXB0dHlwZT0xLHBvd2VyPTUwMCxwb3dlcnJlZ2VuPTMscG93ZXJyZWdlbmVuZXJneT01LHJhZGl1cz01MCxyZXB1bHNlcj10cnVlLHNtYXJ0PXRydWUsc3RhcnRpbmdwb3dlcj0xMDAsdmlzaWJsZXJlcHVsc2U9dHJ1ZSxiYWRjb2xvcj17MSwwLjIsMC4yLDAuMn0sZ29vZGNvbG9yPXswLjIsMSwwLjIsMC4xN319fWxvY2FsIG09eydhcm1jb20nLCdhcm1jb21sdmwyJywnYXJtY29tbHZsMycsJ2NvcmNvbScsJ2NvcmNvbWx2bDInLCdjb3Jjb21sdmwzJywnbGVnY29tJywnbGVnY29tbHZsMycsJ2xlZ2NvbWx2bDQnfWZvciBuLGggaW4gaXBhaXJzKG0pZG8gbG9jYWwgbz1kZWVwQ29weShsKW8uc2hpZWxkLmFscGhhPTAuMTU7by5zaGllbGQucG93ZXI9NTAwO28uc2hpZWxkLnJhZGl1cz0xMDA7by5zaGllbGQucG93ZXJyZWdlbj0zO28uc2hpZWxkLnBvd2VycmVnZW5lbmVyZ3k9MzthZGRXZWFwb24oaCxvKWVuZDtmb3IgcCxxIGluIHBhaXJzKFVuaXREZWZzKWRvIGlmIHN0cmluZy5zdWIocCwxLDI0KT09J3JhcHRvcl9haXJfZmlnaHRlcl9iYXNpYyd0aGVuIGlmIHEud2VhcG9uZGVmcyB0aGVuIGZvciByLHMgaW4gcGFpcnMocS53ZWFwb25kZWZzKWRvIHMubmFtZT0nU3Bpa2Uncy5hY2N1cmFjeT0yMDA7cy5jb2xsaWRlZnJpZW5kbHk9MDtzLmNvbGxpZGVmZWF0dXJlPTA7cy5hdm9pZGZlYXR1cmU9MDtzLmF2b2lkZnJpZW5kbHk9MDtzLmFyZWFvZmVmZmVjdD02NDtzLmVkZ2VlZmZlY3RpdmVuZXNzPTAuMztzLmV4cGxvc2lvbmdlbmVyYXRvcj0nY3VzdG9tOnJhcHRvcnNwaWtlLWxhcmdlLXNwYXJrcy1idXJuJ3MuY2FtZXJhU2hha2U9e31zLmRhbmNlPXt9cy5pbnRlcmNlcHRlZGJ5c2hpZWxkdHlwZT0wO3MubW9kZWw9J1JhcHRvcnMvc3Bpa2UuczNvJ3MucmVsb2FkdGltZT0xLjE7cy5zb3VuZHN0YXJ0PSd0YWxvbmF0dGFjaydzLnN0YXJ0dmVsb2NpdHk9MjAwO3Muc3VibWlzc2lsZT0xO3Muc21va2V0cmFpbD0wO3Muc21va2VQZXJpb2Q9e31zLnNtb2tldGltZT17fXMuc21va2VzaXplPXt9cy5zbW9rZWNvbG9yPXt9cy5zb3VuZGhpdD17fXMudGV4dHVyZTE9e31zLnRleHR1cmUyPXt9cy50b2xlcmFuY2U9e31zLnRyYWNrcz0wO3MudHVybnJhdGU9NjAwMDA7cy53ZWFwb25hY2NlbGVyYXRpb249MTAwO3Mud2VhcG9udGltZXI9MTtzLndlYXBvbnZlbG9jaXR5PTEwMDA7cy53ZWFwb250eXBlPXt9cy53b2JibGU9e31lbmQgZW5kIGVuZCBlbmQ7aWYgVW5pdERlZnMgdGhlbiBVbml0RGVmcy5yYXB0b3JfYWlyX2thbWlrYXplX2Jhc2ljX3QyX3YxLnNlbGZkZXN0cnVjdGFzPSdyYXB0b3JfZW1wZGVhdGhfYmlnJ1VuaXREZWZzLnJhcHRvcl9sYW5kX3N3YXJtZXJfZW1wX3QyX3YxLndlYXBvbmRlZnMucmFwdG9ycGFyYWx5emVyc21hbGwuZGFtYWdlLnNoaWVsZHM9NjA7VW5pdERlZnMucmFwdG9yX2xhbmRfc3dhcm1lcl9lbXBfdDJfdjEud2VhcG9uZGVmcy5yYXB0b3JwYXJhbHl6ZXJzbWFsbC5wYXJhbHl6ZXRpbWU9NjtVbml0RGVmcy5yYXB0b3JfbGFuZF9hc3NhdWx0X2VtcF90Ml92MS53ZWFwb25kZWZzLnJhcHRvcnBhcmFseXplcmJpZy5kYW1hZ2Uuc2hpZWxkcz0xNDA7VW5pdERlZnMucmFwdG9yX2xhbmRfYXNzYXVsdF9lbXBfdDJfdjEud2VhcG9uZGVmcy5yYXB0b3JwYXJhbHl6ZXJiaWcucGFyYWx5emV0aW1lPTEwO1VuaXREZWZzLnJhcHRvcl9hbGx0ZXJyYWluX2FydHlfZW1wX3QyX3YxLndlYXBvbmRlZnMuZ29vbGF1bmNoZXIucGFyYWx5emV0aW1lPTY7VW5pdERlZnMucmFwdG9yX2FsbHRlcnJhaW5fYXJ0eV9lbXBfdDRfdjEud2VhcG9uZGVmcy5nb29sYXVuY2hlci5wYXJhbHl6ZXRpbWU9MTA7VW5pdERlZnMucmFwdG9yX2Fpcl9ib21iZXJfZW1wX3QyX3YxLmNydWlzZWFsdGl0dWRlPVVuaXREZWZzLnJhcHRvcl9haXJfYm9tYmVyX2VtcF90Ml92MS5jcnVpc2VhbHRpdHVkZSs0MDA7VW5pdERlZnMucmFwdG9yX2Fpcl9ib21iZXJfZW1wX3QyX3YxLndlYXBvbmRlZnMud2VhcG9uLmRhbWFnZS5zaGllbGRzPTEwMDA7VW5pdERlZnMucmFwdG9yX2Fpcl9ib21iZXJfZW1wX3QyX3YxLndlYXBvbmRlZnMud2VhcG9uLmRhbWFnZS5kZWZhdWx0PTIwMDA7VW5pdERlZnMucmFwdG9yX2Fpcl9ib21iZXJfZW1wX3QyX3YxLndlYXBvbmRlZnMud2VhcG9uLnBhcmFseXpldGltZT0xMDtVbml0RGVmcy5yYXB0b3JfYWxsdGVycmFpbl9zd2FybWVyX2VtcF90Ml92MS53ZWFwb25kZWZzLnJhcHRvcnBhcmFseXplcnNtYWxsLnBhcmFseXpldGltZT02O1VuaXREZWZzLnJhcHRvcl9hbGx0ZXJyYWluX3N3YXJtZXJfZW1wX3QyX3YxLndlYXBvbmRlZnMucmFwdG9ycGFyYWx5emVyc21hbGwuZGFtYWdlLnNoaWVsZHM9NjA7VW5pdERlZnMucmFwdG9yX2FsbHRlcnJhaW5fYXNzYXVsdF9lbXBfdDJfdjEud2VhcG9uZGVmcy5yYXB0b3JwYXJhbHl6ZXJiaWcucGFyYWx5emV0aW1lPTY7VW5pdERlZnMucmFwdG9yX2FsbHRlcnJhaW5fYXNzYXVsdF9lbXBfdDJfdjEud2VhcG9uZGVmcy5yYXB0b3JwYXJhbHl6ZXJiaWcuZGFtYWdlLnNoaWVsZHM9MTQwO1VuaXREZWZzLnJhcHRvcl9tYXRyaWFyY2hfZWxlY3RyaWMud2VhcG9uZGVmcy5nb28ucGFyYWx5emV0aW1lPTEzO1VuaXREZWZzLnJhcHRvcl9tYXRyaWFyY2hfZWxlY3RyaWMud2VhcG9uZGVmcy5tZWxlZS5wYXJhbHl6ZXRpbWU9MTM7VW5pdERlZnMucmFwdG9yX21hdHJpYXJjaF9lbGVjdHJpYy53ZWFwb25kZWZzLnNwaWtlX2VtcF9ibG9iLnBhcmFseXpldGltZT0xMztVbml0RGVmcy5hcm1jb20uZmVhdHVyZWRlZnMuZGVhZC5yZWNsYWltYWJsZT1mYWxzZTtVbml0RGVmcy5hcm1jb20uZmVhdHVyZWRlZnMuZGVhZC5kYW1hZ2U9NTc2MDA7VW5pdERlZnMuYXJtY29tbHZsMi5mZWF0dXJlZGVmcy5kZWFkLnJlY2xhaW1hYmxlPWZhbHNlO1VuaXREZWZzLmFybWNvbWx2bDIuZmVhdHVyZWRlZnMuZGVhZC5kYW1hZ2U9NTc2MDA7VW5pdERlZnMuYXJtY29tbHZsMy5mZWF0dXJlZGVmcy5kZWFkLnJlY2xhaW1hYmxlPWZhbHNlO1VuaXREZWZzLmFybWNvbWx2bDMuZmVhdHVyZWRlZnMuZGVhZC5kYW1hZ2U9NTc2MDA7VW5pdERlZnMuY29yY29tLmZlYXR1cmVkZWZzLmRlYWQucmVjbGFpbWFibGU9ZmFsc2U7VW5pdERlZnMuY29yY29tLmZlYXR1cmVkZWZzLmRlYWQuZGFtYWdlPTU3NjAwO1VuaXREZWZzLmNvcmNvbWx2bDIuZmVhdHVyZWRlZnMuZGVhZC5yZWNsYWltYWJsZT1mYWxzZTtVbml0RGVmcy5jb3Jjb21sdmwyLmZlYXR1cmVkZWZzLmRlYWQuZGFtYWdlPTU3NjAwO1VuaXREZWZzLmNvcmNvbWx2bDMuZmVhdHVyZWRlZnMuZGVhZC5yZWNsYWltYWJsZT1mYWxzZTtVbml0RGVmcy5jb3Jjb21sdmwzLmZlYXR1cmVkZWZzLmRlYWQuZGFtYWdlPTU3NjAwO1VuaXREZWZzLmxlZ2NvbS5mZWF0dXJlZGVmcy5kZWFkLnJlY2xhaW1hYmxlPWZhbHNlO1VuaXREZWZzLmxlZ2NvbS5mZWF0dXJlZGVmcy5kZWFkLmRhbWFnZT01NzYwMDtVbml0RGVmcy5sZWdjb21sdmwyLmZlYXR1cmVkZWZzLmRlYWQucmVjbGFpbWFibGU9ZmFsc2U7VW5pdERlZnMubGVnY29tbHZsMi5mZWF0dXJlZGVmcy5kZWFkLmRhbWFnZT01NzYwMDtVbml0RGVmcy5sZWdjb21sdmwzLmZlYXR1cmVkZWZzLmRlYWQucmVjbGFpbWFibGU9ZmFsc2U7VW5pdERlZnMubGVnY29tbHZsMy5mZWF0dXJlZGVmcy5kZWFkLmRhbWFnZT01NzYwMDtVbml0RGVmcy5sZWdjb21sdmw0LmZlYXR1cmVkZWZzLmRlYWQucmVjbGFpbWFibGU9ZmFsc2U7VW5pdERlZnMubGVnY29tbHZsNC5mZWF0dXJlZGVmcy5kZWFkLmRhbWFnZT01NzYwMCBlbmQ7bG9jYWwgdD17J3JhcHRvcl9hbnRpbnVrZScsJ3JhcHRvcl90dXJyZXRfYWNpZF90Ml92MScsJ3JhcHRvcl90dXJyZXRfYWNpZF90M192MScsJ3JhcHRvcl90dXJyZXRfYWNpZF90NF92MScsJ3JhcHRvcl90dXJyZXRfYW50aWFpcl90Ml92MScsJ3JhcHRvcl90dXJyZXRfYW50aWFpcl90M192MScsJ3JhcHRvcl90dXJyZXRfYW50aWFpcl90NF92MScsJ3JhcHRvcl90dXJyZXRfYW50aW51a2VfdDJfdjEnLCdyYXB0b3JfdHVycmV0X2FudGludWtlX3QzX3YxJywncmFwdG9yX3R1cnJldF9iYXNpY190Ml92MScsJ3JhcHRvcl90dXJyZXRfYmFzaWNfdDNfdjEnLCdyYXB0b3JfdHVycmV0X2Jhc2ljX3Q0X3YxJywncmFwdG9yX3R1cnJldF9idXJyb3dfdDJfdjEnLCdyYXB0b3JfdHVycmV0X2VtcF90Ml92MScsJ3JhcHRvcl90dXJyZXRfZW1wX3QzX3YxJywncmFwdG9yX3R1cnJldF9lbXBfdDRfdjEnLCdyYXB0b3Jfd29ybV9ncmVlbid9Zm9yIHAsdSBpbiBwYWlycyhVbml0RGVmcylkbyBmb3Igcix2IGluIGlwYWlycyh0KWRvIGlmIHA9PXYgdGhlbiB1Lm1heHRoaXN1bml0PTEwO3UuaGVhbHRoPXUuaGVhbHRoKjI7aWYgdS53ZWFwb25kZWZzIHRoZW4gZm9yIHIscyBpbiBwYWlycyh1LndlYXBvbmRlZnMpZG8gcy5yZWxvYWR0aW1lPXMucmVsb2FkdGltZS8xLjU7cy5yYW5nZT1zLnJhbmdlLzIgZW5kIGVuZDticmVhayBlbmQgZW5kIGVuZDtmb3IgdyxxIGluIHBhaXJzKFVuaXREZWZzKWRvIGlmIHEuYnVpbGRlcj09dHJ1ZSB0aGVuIGlmIHEuY2FuZmx5PT10cnVlIHRoZW4gcS5leHBsb2RlYXM9JydxLnNlbGZkZXN0cnVjdGFzPScnZW5kIGVuZCBlbmQ7bG9jYWwgdD17J3JhcHRvcl9haXJfYm9tYmVyX2Jhc2ljX3QyX3YxJywncmFwdG9yX2Fpcl9ib21iZXJfYmFzaWNfdDJfdjInLCdyYXB0b3JfYWlyX2JvbWJlcl9iYXNpY190NF92MScsJ3JhcHRvcl9haXJfYm9tYmVyX2Jhc2ljX3Q0X3YyJywncmFwdG9yX2Fpcl9ib21iZXJfYmFzaWNfdDFfdjEnfWZvciBwLHUgaW4gcGFpcnMoVW5pdERlZnMpZG8gZm9yIHIsdiBpbiBpcGFpcnModClkbyBpZiBwPT12IHRoZW4gaWYgdS53ZWFwb25kZWZzIHRoZW4gZm9yIHIscyBpbiBwYWlycyh1LndlYXBvbmRlZnMpZG8gcy5kYW1hZ2UuZGVmYXVsdD1zLmRhbWFnZS5kZWZhdWx0LzEuMzMgZW5kIGVuZDticmVhayBlbmQgZW5kIGVuZA