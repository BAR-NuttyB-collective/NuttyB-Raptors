local a=UnitDefs or{}local function b(c,d)for e,f in pairs(d)do if type(f)=='table'and type(c[e])=='table'then b(c[e],f)else c[e]=f end end end;function deepCopy(d,g)g=g or{}local h={}g[d]=h;for e,f in pairs(d)do if type(f)=='table'then h[e]=g[f]or deepCopy(f,g)else h[e]=f end end;return h end;function addWeapon(i,j,k)a[i]=a[i]or{}a[i].weapons=a[i].weapons or{}a[i].weapondefs=a[i].weapondefs or{}a[i].customparams=a[i].customparams or{}local l='repulsor'table.insert(a[i].weapons,{def=l,onlytargetcategory=k or''})a[i].weapondefs[l]=j;if j.shield and j.shield.power>0 then j.range=j.shield.radius;a[i].customparams=a[i].customparams or{}b(a[i].customparams,{off_on_stun='true',shield_color_mult=0.8,shield_power=j.shield.power,shield_radius=j.shield.radius})end end;local m={avoidfeature=false,craterareaofeffect=0,craterboost=0,cratermult=0,edgeeffectiveness=0.15,name='PlasmaRepulsor',range=50,soundhitwet='sizzle',weapontype='Shield',damage={default=100},shield={alpha=0.15,armortype='shields',energyuse=1,force=2.5,intercepttype=1,power=500,powerregen=3,powerregenenergy=5,radius=50,repulser=true,smart=true,startingpower=100,visiblerepulse=true,badcolor={1,0.2,0.2,0.2},goodcolor={0.2,1,0.2,0.17}}}local n={'armcom','armcomlvl2','armcomlvl3','armcomlvl4','corcom','corcomlvl2','corcomlvl3','corcomlvl4','legcom','legcomlvl2','legcomlvl3','legcomlvl4','legcomt2com'}for o,i in ipairs(n)do local p=deepCopy(m)p.shield.alpha=0.15;p.shield.power=500;p.shield.radius=100;p.shield.powerregen=3;p.shield.powerregenenergy=3;addWeapon(i,p)end;for q,r in pairs(a)do if string.sub(q,1,24)=='raptor_air_fighter_basic'then if r.weapondefs then for s,t in pairs(r.weapondefs)do t.name='Spike't.accuracy=200;t.collidefriendly=0;t.collidefeature=0;t.avoidfeature=0;t.avoidfriendly=0;t.areaofeffect=64;t.edgeeffectiveness=0.3;t.explosiongenerator='custom:raptorspike-large-sparks-burn't.cameraShake={}t.dance={}t.interceptedbyshieldtype=0;t.model='Raptors/spike.s3o't.reloadtime=1.1;t.soundstart='talonattack't.startvelocity=200;t.submissile=1;t.smoketrail=0;t.smokePeriod={}t.smoketime={}t.smokesize={}t.smokecolor={}t.soundhit={}t.texture1={}t.texture2={}t.tolerance={}t.tracks=0;t.turnrate=60000;t.weaponacceleration=100;t.weapontimer=1;t.weaponvelocity=1000;t.weapontype={}t.wobble={}end end elseif q:match'^[acl][ore][rgm]com'then a[q].featuredefs.dead.reclaimable=false;a[q].featuredefs.dead.damage=99999 end end;if a then if a.raptor_air_kamikaze_basic_t2_v1 then a.raptor_air_kamikaze_basic_t2_v1.selfdestructas='raptor_empdeath_big'end;if a.raptor_land_swarmer_emp_t2_v1 then a.raptor_land_swarmer_emp_t2_v1.weapondefs.raptorparalyzersmall.damage.shields=60 end;if a.raptor_land_swarmer_emp_t2_v1 then a.raptor_land_swarmer_emp_t2_v1.weapondefs.raptorparalyzersmall.paralyzetime=6 end;if a.raptor_land_assault_emp_t2_v1 then a.raptor_land_assault_emp_t2_v1.weapondefs.raptorparalyzerbig.damage.shields=140 end;if a.raptor_land_assault_emp_t2_v1 then a.raptor_land_assault_emp_t2_v1.weapondefs.raptorparalyzerbig.paralyzetime=10 end;if a.raptor_allterrain_arty_emp_t2_v1 then a.raptor_allterrain_arty_emp_t2_v1.weapondefs.goolauncher.paralyzetime=6 end;if a.raptor_allterrain_arty_emp_t4_v1 then a.raptor_allterrain_arty_emp_t4_v1.weapondefs.goolauncher.paralyzetime=10 end;if a.raptor_air_bomber_emp_t2_v1 then a.raptor_air_bomber_emp_t2_v1.weapondefs.weapon.damage.shields=1000 end;if a.raptor_air_bomber_emp_t2_v1 then a.raptor_air_bomber_emp_t2_v1.weapondefs.weapon.damage.default=2000 end;if a.raptor_air_bomber_emp_t2_v1 then a.raptor_air_bomber_emp_t2_v1.weapondefs.weapon.paralyzetime=10 end;if a.raptor_allterrain_swarmer_emp_t2_v1 then a.raptor_allterrain_swarmer_emp_t2_v1.weapondefs.raptorparalyzersmall.paralyzetime=6 end;if a.raptor_allterrain_swarmer_emp_t2_v1 then a.raptor_allterrain_swarmer_emp_t2_v1.weapondefs.raptorparalyzersmall.damage.shields=60 end;if a.raptor_allterrain_assault_emp_t2_v1 then a.raptor_allterrain_assault_emp_t2_v1.weapondefs.raptorparalyzerbig.paralyzetime=6 end;if a.raptor_allterrain_assault_emp_t2_v1 then a.raptor_allterrain_assault_emp_t2_v1.weapondefs.raptorparalyzerbig.damage.shields=140 end;if a.raptor_matriarch_electric then a.raptor_matriarch_electric.weapondefs.goo.paralyzetime=13 end;if a.raptor_matriarch_electric then a.raptor_matriarch_electric.weapondefs.melee.paralyzetime=13 end;if a.raptor_matriarch_electric then a.raptor_matriarch_electric.weapondefs.spike_emp_blob.paralyzetime=13 end end;local u={'raptor_antinuke','raptor_turret_acid_t2_v1','raptor_turret_acid_t3_v1','raptor_turret_acid_t4_v1','raptor_turret_antiair_t2_v1','raptor_turret_antiair_t3_v1','raptor_turret_antiair_t4_v1','raptor_turret_antinuke_t2_v1','raptor_turret_antinuke_t3_v1','raptor_turret_basic_t2_v1','raptor_turret_basic_t3_v1','raptor_turret_basic_t4_v1','raptor_turret_burrow_t2_v1','raptor_turret_emp_t2_v1','raptor_turret_emp_t3_v1','raptor_turret_emp_t4_v1','raptor_worm_green'}for v,w in pairs(a)do for s,x in ipairs(u)do if v==x then w.maxthisunit=10;w.health=w.health*2;if w.weapondefs then for s,t in pairs(w.weapondefs)do t.reloadtime=t.reloadtime/1.5;t.range=t.range/2 end end;break end end end;for y,z in pairs(a)do if z.builder==true then if z.canfly==true then z.explodeas=''z.selfdestructas=''end end end;local u={'raptor_air_bomber_basic_t2_v1','raptor_air_bomber_basic_t2_v2','raptor_air_bomber_basic_t4_v1','raptor_air_bomber_basic_t4_v2','raptor_air_bomber_basic_t1_v1'}for v,w in pairs(a)do for s,x in ipairs(u)do if v==x then if w.weapondefs then for s,t in pairs(w.weapondefs)do t.damage.default=t.damage.default/1.33 end end;break end end end;for A,y in pairs({'armrespawn','correspawn','legnanotcbase'})do a[y].cantbetransported=false;a[y].footprintx=4;a[y].footprintz=4;a[y].customparams.paratrooper=true;a[y].customparams.fall_damage_multiplier=0 end