--T3 Cons & Taxed Factories
-- Authors: Nervensaege, TetrisCo
-- docs.google.com/spreadsheets/d/1QSVsuAAMhBrhiZdTihVfSCwPzbbZWDLCtXWP23CU0ko 
local a,b,c,d,e,f,g=UnitDefs or{},{'arm','cor','leg'},table.merge,{arm='Armada ',cor='Cortex ',leg='Legion '},'_taxed',1.5,table.contains;local function h(i,j,k)if a[i]and not a[j]then a[j]=c(a[i],k)end end;for l,m in pairs(b)do local n,o,p=m=='arm',m=='cor',m=='leg'h(m..'nanotct2',m..'nanotct3',{metalcost=3700,energycost=62000,builddistance=550,buildtime=108000,collisionvolumescales='61 128 61',footprintx=6,footprintz=6,health=8800,mass=37200,sightdistance=575,workertime=1900,icontype="armnanotct2",canrepeat=true,objectname=p and'Units/legnanotcbase.s3o'or o and'Units/CORRESPAWN.s3o'or'Units/ARMRESPAWN.s3o',customparams={i18n_en_humanname='T3 Construction Turret',i18n_en_tooltip='More BUILDPOWER! For the connoisseur'}})h(p and'legamstor'or m..'uwadvms',p and'legamstort3'or m..'uwadvmst3',{metalstorage=30000,metalcost=4200,energycost=231150,buildtime=142800,health=53560,maxthisunit=3,icontype="armuwadves",name=d[m]..'T3 Metal Storage',customparams={i18n_en_humanname='T3 Hardened Metal Storage',i18n_en_tooltip='The big metal storage tank for your most precious resources. Chopped chicken!'}})h(p and'legadvestore'or m..'uwadves',p and'legadvestoret3'or m..'advestoret3',{energystorage=272000,metalcost=2100,energycost=59000,buildtime=93380,health=49140,icontype="armuwadves",maxthisunit=3,name=d[m]..'T3 Energy Storage',customparams={i18n_en_humanname='T3 Hardened Energy Storage',i18n_en_tooltip='Power! Power! We need power!1!'}})for l,q in pairs({m..'nanotc',m..'nanotct2'})do if a[q]then a[q].canrepeat=true end end;local r=n and'armshltx'or o and'corgant'or'leggant'local s=a[r]h(r,r..e,{energycost=s.energycost*f,icontype=r,metalcost=s.metalcost*f,name=d[m]..'Experimental Gantry Taxed',customparams={i18n_en_humanname=d[m]..'Experimental Gantry Taxed',i18n_en_tooltip='Produces Experimental Units'}})local t,u={},{m..'afust3',m..'nanotct2',m..'nanotct3',m..'alab',m..'avp',m..'aap',m..'gatet3',m..'flak',p and'legadveconvt3'or m..'mmkrt3',p and'legamstort3'or m..'uwadvmst3',p and'legadvestoret3'or m..'advestoret3',p and'legdeflector'or m..'gate',p and'legforti'or m..'fort',n and'armshltx'or m..'gant'}for l,v in ipairs(u)do t[#t+1]=v end;local w={arm={'corgant','leggant'},cor={'armshltx','leggant'},leg={'armshltx','corgant'}}for l,x in ipairs(w[m]or{})do t[#t+1]=x..e end;local y={arm={'armamd','armmercury','armbrtha','armminivulc','armvulc','armanni','armannit3','armlwall','legendary_pulsar'},cor={'corfmd','corscreamer','cordoomt3','corbuzz','corminibuzz','corint','cordoom','corhllllt','cormwall','legendary_bulwark'},leg={'legabm','legstarfall','legministarfall','leglraa','legbastion','legrwall','leglrpc','legendary_bastion'}}for l,v in ipairs(y[m]or{})do t[#t+1]=v end;local j=m..'t3aide'h(m..'decom',j,{blocking=true,builddistance=350,buildtime=140000,energycost=200000,energyupkeep=2000,health=10000,idleautoheal=5,idletime=1800,maxthisunit=1,metalcost=12600,speed=85,terraformspeed=3000,turninplaceanglelimit=1.890,turnrate=1240,workertime=6000,reclaimable=true,candgun=false,name=d[m]..'Epic Aide',customparams={subfolder='ArmBots/T3',techlevel=3,unitgroup='buildert3',i18n_en_humanname='Epic Ground Construction Aide',i18n_en_tooltip='Your Aide that helps you construct buildings'},buildoptions=t})a[j].weapondefs={}a[j].weapons={}j=m..'t3airaide'h('armfify',j,{blocking=false,canassist=true,cruisealtitude=3000,builddistance=1750,buildtime=140000,energycost=200000,energyupkeep=2000,health=1100,idleautoheal=5,idletime=1800,icontype="armnanotct2",maxthisunit=1,metalcost=13400,speed=25,category="OBJECT",terraformspeed=3000,turninplaceanglelimit=1.890,turnrate=1240,workertime=1600,buildpic='ARMFIFY.DDS',name=d[m]..'Epic Aide',customparams={is_builder=true,subfolder='ArmBots/T3',techlevel=3,unitgroup='buildert3',i18n_en_humanname='Epic Air Construction Aide',i18n_en_tooltip='Your Aide that helps you construct buildings'},buildoptions=t})a[j].weapondefs={}a[j].weapons={}local z=n and'armshltx'or o and'corgant'or'leggant'if a[z]and a[z].buildoptions then local A=m..'t3aide'if not g(a[z].buildoptions,A)then table.insert(a[z].buildoptions,A)end end;z=m..'apt3'if a[z]and a[z].buildoptions then local B=m..'t3airaide'if not g(a[z].buildoptions,B)then table.insert(a[z].buildoptions,B)end end end